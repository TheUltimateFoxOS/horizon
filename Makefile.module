OBJDIR = ../../lib
BUILDDIR = ../../bin

rwildcard=$(foreach d,$(wildcard $(1:=/*)),$(call rwildcard,$d,$2) $(filter $(subst *,%,$2),$d))

CPPSRC = $(call rwildcard,./,*.cpp)
CSRC = $(call rwildcard,./,*.c)
ASMSRC = $(call rwildcard,./,*.asm)
OBJS = $(patsubst %.cpp, $(OBJDIR)/$(MODULE_NAME)/%.o, $(CPPSRC))
OBJS += $(patsubst %.c, $(OBJDIR)/$(MODULE_NAME)/%.o, $(CSRC))
OBJS += $(patsubst %.asm, $(OBJDIR)/$(MODULE_NAME)/%_asm.o, $(ASMSRC))

TOOLCHAIN_BASE = /usr/local/foxos-x86_64_elf_gcc

ifeq (,$(wildcard $(TOOLCHAIN_BASE)/bin/foxos-gcc))
	CC = gcc
else
	CC = $(TOOLCHAIN_BASE)/bin/foxos-gcc
endif

ifeq (,$(wildcard $(TOOLCHAIN_BASE)/bin/foxos-nasm))
	ASM = nasm
else
	ASM = $(TOOLCHAIN_BASE)/bin/foxos-nasm
endif

ifeq (,$(wildcard $(TOOLCHAIN_BASE)/bin/foxos-gcc))
	LD = ld
else
	LD = $(TOOLCHAIN_BASE)/bin/foxos-ld
endif

LDFLAGS = -r

module: $(OBJS)
	@echo LD $^ $(USER_OBJECTS)
	@$(LD) $(LDFLAGS) -o $(BUILDDIR)/$(MODULE_NAME) $^ $(USER_OBJECTS)

	@echo "Compiled using asm: $(ASM), cc: $(CC), ld: $(LD)"

$(OBJDIR)/$(MODULE_NAME)/%.o: %.cpp
	@echo "CPP $^ -> $@"
	@mkdir -p $(@D)
	@$(CC) $(CPPFLAGS) -c -o $@ $^

$(OBJDIR)/$(MODULE_NAME)/%.o: %.c
	@echo "CC $^ -> $@"
	@mkdir -p $(@D)
	@$(CC) $(CFLAGS) -c -o $@ $^

$(OBJDIR)/$(MODULE_NAME)/%_asm.o: %.asm
	@echo "ASM $^ -> $@"
	@mkdir -p $(@D)
	@$(ASM) $(ASMFLAGS) -o $@ $^